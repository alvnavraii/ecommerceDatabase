package com.ecommerce.province;

import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

import java.util.ArrayList;
import java.util.List;

import com.ecommerce.autCom.AutCom;
import com.ecommerce.common.Audit;
import com.ecommerce.municipality.Municipality;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

/*
create table provinces (
    id bigint generated by default as identity,
    code varchar(2) not null,
    alfa_code varchar(3) not null,
    name varchar(100) not null,
    is_active boolean not null default true,
    autcom_id bigint not null,
    created_at timestamp(6) not null,
    created_by varchar(50) not null,
    updated_at timestamp(6) not null,
    updated_by varchar(50) not null,
    constraint pk_provinces primary key (id),
    constraint uk_provinces_code unique (code),
    constraint uk_provinces_alfa_code unique (alfa_code),
    constraint fk_provinces_autcom foreign key (autcom_id) references autonomous_communities(id)
);
*/

@Data
@Entity
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "provinces", schema = "ecommerce")
@EqualsAndHashCode
public class Province {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, length = 2, unique = true)
    private String code;

    @Column(name = "alfa_code", nullable = false, length = 3, unique = true)
    private String alfaCode;

    @Column(nullable = false, length = 100)
    private String name;

    @Column(name = "is_active", nullable = false)
    @Builder.Default
    private Boolean isActive = true;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "autcom_id", nullable = false)
    private AutCom autCom;

    @OneToMany(mappedBy = "province")
    @Builder.Default
    private List<Municipality> municipalities = new ArrayList<>();

    @Embedded
    private Audit audit;
}
